// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.819
// components/layout.templ

package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Layout() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html lang=\"es\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Dashboard</title><script src=\"https://unpkg.com/lucide@latest\"></script><script src=\"https://cdn.tailwindcss.com\"></script></head><body class=\"bg-gray-50\"><!-- Navegación Superior -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = TopNav().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<!-- Contenedor Principal --><div class=\"flex h-screen pt-16\"><!-- pt-16 para compensar la navbar fija --><!-- Navegación Lateral -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = SideNav().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<!-- Contenido Principal --><main class=\"flex-1 overflow-y-auto p-8 ml-64\"><div class=\"container mx-auto\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ_7745c5c3_Var1.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</div></main></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = navScript().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "</body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func TopNav() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "<nav class=\"fixed top-0 right-0 left-0 z-50 h-16 bg-white border-b border-gray-200 shadow-sm\"><div class=\"flex items-center justify-between h-full px-4\"><div class=\"flex items-center space-x-4\"><button id=\"toggle-sidebar\" class=\"p-2 rounded-lg hover:bg-gray-100\"><i data-lucide=\"menu\" class=\"w-6 h-6\"></i></button><h1 class=\"text-xl font-semibold text-gray-800\">Mi Dashboard</h1></div><div class=\"flex items-center space-x-4\"><button class=\"p-2 rounded-lg hover:bg-gray-100 relative\"><i data-lucide=\"bell\" class=\"w-6 h-6\"></i> <span class=\"absolute top-1 right-1 w-2 h-2 bg-red-500 rounded-full\"></span></button><div class=\"flex items-center space-x-3\"><span class=\"text-sm font-medium text-gray-700\">John Doe</span> <button class=\"p-2 rounded-full hover:bg-gray-100\"><i data-lucide=\"user\" class=\"w-6 h-6\"></i></button></div></div></div></nav>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func SideNav() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "<aside id=\"sidebar\" class=\"fixed left-0 top-16 w-64 h-[calc(100vh-4rem)] bg-white border-r border-gray-200 overflow-y-auto transition-transform duration-300\"><div class=\"p-4\"><nav class=\"space-y-1\"><a href=\"/\" class=\"flex items-center px-4 py-3 text-gray-700 rounded-lg hover:bg-gray-100 group\"><i data-lucide=\"home\" class=\"w-5 h-5 mr-3 text-gray-500 group-hover:text-gray-700\"></i> <span class=\"font-medium\">Inicio</span></a> <a href=\"/dashboard\" class=\"flex items-center px-4 py-3 text-gray-700 rounded-lg hover:bg-gray-100 group\"><i data-lucide=\"layout-dashboard\" class=\"w-5 h-5 mr-3 text-gray-500 group-hover:text-gray-700\"></i> <span class=\"font-medium\">Dashboard</span></a><!-- Menú desplegable --><div class=\"space-y-1\"><button id=\"dropdown-btn\" class=\"flex items-center justify-between w-full px-4 py-3 text-gray-700 rounded-lg hover:bg-gray-100 group\"><div class=\"flex items-center\"><i data-lucide=\"folder\" class=\"w-5 h-5 mr-3 text-gray-500 group-hover:text-gray-700\"></i> <span class=\"font-medium\">Proyectos</span></div><i data-lucide=\"chevron-down\" class=\"w-5 h-5 text-gray-500 transition-transform duration-200\"></i></button><div id=\"dropdown-menu\" class=\"hidden pl-4 mt-1 space-y-1\"><a href=\"/projects/active\" class=\"flex items-center px-4 py-2 text-sm text-gray-600 rounded-lg hover:bg-gray-100\">Activos</a> <a href=\"/projects/archived\" class=\"flex items-center px-4 py-2 text-sm text-gray-600 rounded-lg hover:bg-gray-100\">Archivados</a></div></div><a href=\"/reports\" class=\"flex items-center px-4 py-3 text-gray-700 rounded-lg hover:bg-gray-100 group\"><i data-lucide=\"bar-chart\" class=\"w-5 h-5 mr-3 text-gray-500 group-hover:text-gray-700\"></i> <span class=\"font-medium\">Reportes</span></a> <a href=\"/settings\" class=\"flex items-center px-4 py-3 text-gray-700 rounded-lg hover:bg-gray-100 group\"><i data-lucide=\"settings\" class=\"w-5 h-5 mr-3 text-gray-500 group-hover:text-gray-700\"></i> <span class=\"font-medium\">Configuración</span></a></nav></div></aside>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func navScript() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var4 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var4 == nil {
			templ_7745c5c3_Var4 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "<script>\r\n        document.addEventListener('DOMContentLoaded', function() {\r\n            // Inicializar iconos\r\n            lucide.createIcons();\r\n\r\n            // Toggle del sidebar\r\n            const toggleButton = document.getElementById('toggle-sidebar');\r\n            const sidebar = document.getElementById('sidebar');\r\n            const mainContent = document.querySelector('main');\r\n\r\n            toggleButton.addEventListener('click', () => {\r\n                sidebar.classList.toggle('-translate-x-full');\r\n                mainContent.classList.toggle('ml-0');\r\n                mainContent.classList.toggle('ml-64');\r\n            });\r\n\r\n            // Toggle del menú desplegable\r\n            const dropdownBtn = document.getElementById('dropdown-btn');\r\n            const dropdownMenu = document.getElementById('dropdown-menu');\r\n            const dropdownIcon = dropdownBtn.querySelector('[data-lucide=\"chevron-down\"]');\r\n\r\n            dropdownBtn.addEventListener('click', () => {\r\n                dropdownMenu.classList.toggle('hidden');\r\n                dropdownIcon.classList.toggle('rotate-180');\r\n            });\r\n\r\n            // Marcar ítem activo\r\n            const currentPath = window.location.pathname;\r\n            document.querySelectorAll('a').forEach(link => {\r\n                if (link.getAttribute('href') === currentPath) {\r\n                    link.classList.add('bg-gray-100');\r\n                    link.classList.add('text-blue-600');\r\n                }\r\n            });\r\n        });\r\n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
